// Generated by https://quicktype.io

namespace QuickType
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Yep
    {
        [JsonProperty("Rules")]
        public Rule[] Rules { get; set; }
    }

    public partial class Rule
    {
        [JsonProperty("ID")]
        public string Id { get; set; }

        [JsonProperty("MuteTime")]
        public string MuteTime { get; set; }

        [JsonProperty("RuleText")]
        public string RuleText { get; set; }

        [JsonProperty("FullRuleText")]
        public string FullRuleText { get; set; }

        [JsonProperty("Link")]
        public string Link { get; set; }
    }

    public partial class Yep
    {
        public static Yep FromJson(string json) => JsonConvert.DeserializeObject<Yep>(json, QuickType.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this Yep self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters = {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
